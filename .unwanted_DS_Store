3.1.1

1. Click on the image link at GitHub to verify that the git push succeeded.

Answer : its succeded.

2. At this point, the number of commits is large enough that the output of git log -p is probably too big to fit in your terminal window. Con­ firm that running git log -p drops you into a less interface for easier navigation.
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git log -p
commit 6b2387e26ce43fa0ac96e9b439d9b1a667764509 (HEAD -> main, origin/main, origin-push/main)
Author: Bansari Patel <bansaripatel25897@gmail.com>
Date:   Fri Mar 15 14:01:09 2024 -0500

    Add an image

diff --git a/images/breaching_whale.jpg b/images/breaching_whale.jpg
new file mode 100644
index 0000000..a821434
Binary files /dev/null and b/images/breaching_whale.jpg differ
diff --git a/index.html b/index.html
new file mode 100644
index 0000000..58ebae2
--- /dev/null
+++ b/index.html
@@ -0,0 +1,11 @@
+<!DOCTYPE html>
+<html>
+<head>
+<title>A whale of a greeting</title>
+</head>
+<body>

3. Use your knowledge of less commands to search for the commit that added the HTML DOCTYPE. What is the SHA of the commit?

 Answer : 
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git log -p
commit 6b2387e26ce43fa0ac96e9b439d9b1a667764509 (HEAD -> main, origin/main, origin-push/main)
Author: Bansari Patel <bansaripatel25897@gmail.com>
Date:   Fri Mar 15 14:01:09 2024 -0500

     Added DOCTYPE

diff --git a/images/breaching_whale.jpg b/images/breaching_whale.jpg
new file mode 100644
index 0000000..a821434
Binary files /dev/null and b/images/breaching_whale.jpg differ
diff --git a/index.html b/index.html
new file mode 100644
index 0000000..58ebae2
--- /dev/null
+++ b/index.html
@@ -0,0 +1,11 @@
+<!DOCTYPE html>
+<html>
+<head>
+<title>A whale of a greeting</title>
+</head>
+<body>

3.2.1

1. Commit the .gitignore file to your repository. Hint: Running git commit -am isn’t enough. Why not?

Answer : .gitignore commited to the repository.

Only git commit -am is not enough, as there is m switch, we also mention the commit text with it.

2. Push your commit up to GitHub and confirm using the web interface that the push succeeded.

Answer : Push succeded.

3.3.2
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git branch
* main

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git branch test-branch

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git checkout test-branch
Switched to branch 'test-branch'

3. Check out test-branch and use touch to add a file with a name of your choice, then add and commit it to the repository.


Answer : 
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git checkout test-branch
Switched to branch 'test-branch'

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (test-branch)
$ touch IAmLazy.txt

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (test-branch)
$ git add -A

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (test-branch)
$ git commit -am "Added my characteristics file.. I am lazy.."
[test-branch 971cbbe] Added my characteristics file.. I am lazy..
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 IAmLazy.txt

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (test-branch)
$ git push --force-with-lease origin-push
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 270 bytes | 270.00 KiB/s, done.
Total 2 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
remote:
remote: Create a pull request for 'test-branch' on GitHub by visiting:
remote:      https://github.com/bansupatel/Assignment/pull/new/test-branch
remote:
To https://github.com/bansupatel/Assignment.git
 * [new branch]      test-branch -> test-branch

4. Check out the main branch and try deleting the test branch using git branch -d to confirm that it doesn’t work. The reason is that, in con­ trast to the about-page branch, the test branch hasn’t been merged into main, and by design -d doesn’t work in this case. Because we don’t actually want its changes, delete the test by using the related -D option, which deletes the branch in question even if its changes are unmerged.


Answer :
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (test-branch)
$ git checkout main
Switched to branch 'main'

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git branch
* main
  test-branch

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git branch -d test-branch
error: the branch 'test-branch' is not fully merged
hint: If you are sure you want to delete it, run 'git branch -D test-branch'
hint: Disable this message with "git config advice.forceDeleteBranch false"

3.4.1

The git checkout -f trick works only with files that are staged for commit or are already part of the repository, but sometimes you want to get rid of new files as well. Using touch, create a file with a name of your choice, then git add it. Verify that running git checkout -f gets rid of it.
2. Like many other Unix programs, git accepts both “short form” and “long form” options. Repeat the previous exercise with git checkout --force to confirm that the effects of -f and --force are identical. Extra credit: Double­check this conclusion by finding the “force” option in the output of git help checkout.



Answer :
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ echo >> about.html

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ vi about.html

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ echo > about.html

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ cat about.html


Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   about.html

no changes added to commit (use "git add" and/or "git commit -a")

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git diff
warning: in the working copy of 'about.html', LF will be replaced by CRLF the next time Git touches it
diff --git a/about.html b/about.html
index 6b1756e..8b13789 100644
--- a/about.html
+++ b/about.html
@@ -1,16 +1 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <title>About Us</title>
-    <meta charset="utf-8">
-</head>
-  <body>
-    <h1><strong>About Us</strong></h1>
-    <p>
-      This site is a sample project for the <strong>awesome</strong> Git
-      tutorial <a href="https://www.learnenough.com/git-tutorial"><em>Learn Enough™ Git to Be Dangerous</em></a>.
-    </p>
-    <a href="https://www.flickr.com/photos/puliarfanita/22959238329">
-      <img src="images/polar_bear.jpg" alt="Polar bear"> </a>
-</body>

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git checkout -f

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git diff

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ cat about.html
<!DOCTYPE html>
<html>
  <head>
    <title>About Us</title>
    <meta charset="utf-8">
</head>
  <body>
    <h1><strong>About Us</strong></h1>
    <p>
      This site is a sample project for the <strong>awesome</strong> Git
      tutorial <a href="https://www.learnenough.com/git-tutorial"><em>Learn Enough™ Git to Be Dangerous</em></a>.
    </p>
    <a href="https://www.flickr.com/photos/puliarfanita/22959238329">
      <img src="images/polar_bear.jpg" alt="Polar bear"> </a>
</body>
</html>
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git checkout -b test-branch
fatal: a branch named 'test-branch' already exists

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ echo > about.html

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git commit -am "Oops"
warning: in the working copy of 'about.html', LF will be replaced by CRLF the next time Git touches it
[main 84d990c] Oops
 1 file changed, 1 insertion(+), 16 deletions(-)

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git checkout main
Already on 'main'

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git branch -D test-branch
Deleted branch test-branch (was 971cbbe).

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git branch
* main

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ cat about.html

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ echo > about.html

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git diff
warning: in the working copy of 'about.html', LF will be replaced by CRLF the next time Git touches it

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git checkout --force

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ cat about.html

4.1.1

1. As Alice, run git log to verify that the commit was pulled down cor­ rectly. Double­check the details using git log -p.


Answer : 
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git log -p
commit 84d990c0481b7488d2c0d8cb073ae7c92e0890e8 (HEAD -> main, origin-push/main)
Author: Bansari Patel <bansaripatel25897@gmail.com>
Date:   Fri Mar 15 14:37:47 2024 -0500

    Oops

diff --git a/about.html b/about.html
index 6b1756e..8b13789 100644
--- a/about.html
+++ b/about.html
@@ -1,16 +1 @@
-<!DOCTYPE html>
-<html>
-  <head>
-    <title>About Us</title>
-    <meta charset="utf-8">
-</head>
-  <body>
-    <h1><strong>About Us</strong></h1>
-    <p>
-      This site is a sample project for the <strong>awesome</strong> Git
-      tutorial <a href="https://www.learnenough.com/git-tutorial"><em>Learn Enough™ Git to Be Dangerous</em></a>.

2. The whale picture added in Listing 3.1 (Figure 3.1) requires attribution under the Creative Commons Attribution­NoDerivs 2.0 Generic license. As Alice, link the image to the original attribution page, as shown in Listing 4.1. Commit the result and push to GitHub.



Answer : 
Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ vi index.html

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git add -A

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git commit -am "Added attribution page for image"
On branch main
nothing to commit, working tree clean

Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git pull
From https://github.com/bansupatel/Assignment
   6b2387e..e119565  main        -> origin/main
 * [new branch]      test-branch -> origin/test-branch
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> main


Patel@DESKTOP-17DSVEV MINGW64 ~/OneDrive/Desktop/Assignment (main)
$ git push --force-with-lease origin-push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 258 bytes | 258.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/bansupatel/Assignment.git
   e119565..84d990c  main -> main


4.2.3

4.2.3 Exercises
1. Change your default Git editor from Vim to Atom. Hint: Google for it. (This is an absolutely classic application of technical sophistication (Box 1.2): With a well­chosen Google search, you can often go from “I have no idea how to do this” to “It’s done” in under 30 seconds.)


Answer : 

I have changed the git editor to vim, as atom does not work properly in my os.

2. ThepolarbearpictureaddedinListing4.3(Figure4.11)requiresattribu­ tion under the Creative Commons Attribution 2.0 Generic license. As Al­ ice, link the image to the original attribution page, as shown in Listing 4.8. Then run git commit -a without including -m and a command­line message. This should drop you into the default Git editor. Quit the edi­ tor without including a message, which cancels the commit.

Answer : Done

3. Rungitcommit-aagain,butthistimeaddthecommitmessage“Add polar bear attribution link”. Then hit return a couple of times and add a longer message of your choice. (One example appears in Figure 4.17.) Save the message and exit the editor.

Answer : Done

4. Run git log to confirm that both the short and longer messages cor­ rectly appear. After pushing the changes to GitHub, navigate to the page for the commit to confirm that both the short and longer messages cor­ rectly appear.

Answer : Both messages correctly appeated.

5. As Bob, pull in the changes to the About page. Verify by refreshing the browser and by running git log -p that Bob’s repo has been properly updated.

Answer : After pull, Bob also had the same update.


